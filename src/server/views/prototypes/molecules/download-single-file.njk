{% extends 'layouts/bulma-ufs.layout.njk' %}
{% set navType = '_admin' %}
{% set isAdminUser = false %}
{%  set loggedOut = false %}
{% set backLinkContents =  [{url:'/prototypes/molecules', text:'Back to molecules'}] %}

{% set newHeader = true %}

{% set pageTitle = 'File upload; admin, simple' + GLOBAL_TAG_TITLE_SUFFIX %}

{% block content %}

    <style>
        .tox-statusbar__wordcount, .tox-statusbar__branding { display: none!important}
    </style>

    {% call components.bulmaRow() %}
        {% call components.bulmaColumnAny(size='is-two-thirds u-space-t30') %}
            {{ components.captionHeading(text='CV', caption='Title of application') }}
        {%- endcall %}
    {%- endcall %}







        {% call components.bulmaRow(extraClass='u-space-t30') %}

            {% call components.bulmaColumnAny(size='column  is-full is-9-desktop is-9-widescreen', customID='mainContent') %}

                {{ components.captionHeading(text='One file uploaded and displayed on a non edit page', tag='h2', size='l') }}

            {%- endcall %}

        {%- endcall %}



        {% call components.bulmaRow(extraClass='') %}

            {% call components.bulmaColumnAny(size='column  is-full is-9-desktop is-9-widescreen', customID='main-content') %}

                <div class="files">

                    {#<div class="files__item">
                        <div class="files__name">
                            prof_shiela_bobbington_CV.PDF
                        </div>
                        <div class="files__meta">
                            <span class="files__size">1.3MB</span>
                            <span class="files__action">
                                <a href="#" class="govuk-link">Download <span class="govuk-visually-hidden"> this file</span></a>
                            </span>
                        </div>
                    </div>#}

                    <div class="files__item">
                        <div class="files__name">
                            Filename of attachment.file type
                        </div>
                        <div class="files__meta">
                            <span class="files__size">4.18Mb</span>
                            <span class="files__action">
                                <a href="#" class="govuk-link">Download <span class="govuk-visually-hidden"> this file</span></a>
                            </span>
                        </div>
                    </div>

                    {#<div class="files__item">
                        <div class="files__name">
                            dr_tharg_mighty_CV.PDF
                        </div>
                        <div class="files__meta">
                            <span class="files__size">212kb</span>
                            <span class="files__action">
                                <a href="#" class="govuk-link">Download <span class="govuk-visually-hidden"> this file</span></a>
                            </span>
                        </div>
                    </div>#}

                </div>


            {%- endcall %}
        {%- endcall %}

        {#{% call components.bulmaRow() %}
            {% call components.bulmaColumnAny(size='is-full') %}
                <div class="application-item">
                    <div class="application-item__contents application-item__contents--mac">
                        <fieldset class="govuk-fieldset" aria-describedby="markAsComplete">
                            <legend class="govuk-fieldset__legend govuk-visually-hidden">
                                <h3 class="govuk-fieldset__heading" id="">Mark as complete</h3>
                            </legend>
                            <div class="govuk-checkboxes">
                                <div class="govuk-checkboxes__item">
                                    <input class="govuk-checkboxes__input" id="markAsComplete" name="isComplete" type="checkbox">
                                    <label class="govuk-label govuk-checkboxes__label" for="markAsComplete">Mark as complete</label>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            {%- endcall %}
        {%- endcall %}#}

      {#  {% call components.bulmaRow() %}
            {% call components.bulmaColumnAny(size='is-full') %}
                <div class="application-controls govuk-clearfix">
                    {{ components.button(text='Save and return', extraClass="application-controls__submit")}}
                    #}{#<span class="sub-button">
                        {{ components.link(text='Cancel', url='/prototypes/application-v2/')}}
                    </span>#}{#
                </div>
            {%- endcall %}
        {%- endcall %}#}



    {% include '../../layouts/partials/user-contact.njk' %}

{% endblock %}
{% block bodyScripts %}
    <script src="https://cdn.tiny.cloud/1/phk3goz7y02jvj65em0m21azcq1qr7abduimch9isoe4jkor/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        const counteroutputFoot = document.getElementById('wordCount');
        let words = 0;
        const limit = 250;
        let tinyMCEWordCount;

        tinymce.init({
            selector: '#textarea1, #textarea2',
            height: 500,
            {% if readOnly %} readonly : 1, {% endif %}
            plugins: [
                'advlist autolink lists link image preview anchor',
                'media table paste  wordcount'
            ],
            setup: function(editor) {

                editor.on('keyup', function(e) {
                    tinyMCEWordCount = parseInt(document.getElementsByClassName('tox-statusbar__wordcount')[0].innerHTML.split([' ']));
                    console.log('tinyMCEWordCount = ' + tinyMCEWordCount);
                    words = tinyMCEWordCount;
                    let remainder = limit - words;
                    if (words < limit) {
                        counteroutputFoot.innerHTML = 'You have ' + remainder + ' words remaining';
                    } else {
                        let overCount = words - limit;
                        counteroutputFoot.innerHTML = '<span style="font-weight:700;color:red">You have ' +  overCount + ' words too many</span>';
                    }
                });

                editor.on('init', function(e) {
                    setTimeout(function(){
                        tinyMCEWordCount = parseInt(document.getElementsByClassName('tox-statusbar__wordcount')[0].innerHTML.split([' ']));
                        console.log('tinyMCEWordCount = ' + tinyMCEWordCount);
                        words = tinyMCEWordCount;
                        let remainder = limit - words;
                        counteroutputFoot.innerHTML = 'You have ' + remainder + ' words remaining';
                    }, 500);
                });
            },
            toolbar: 'formatselect | bold italic | bullist numlist | align | indent outdent | link | table |',
            content_css: [
                '//fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i',
                '/stylesheets/tinymce.css'
            ],
            menubar: false,
        });
    </script>

{% endblock %}
